// SPDX-License-Identifier: MIT
import org.jetbrains.changelog.ExtensionsKt
import java.text.SimpleDateFormat

plugins {
    id 'java'
    // see https://github.com/JetBrains/gradle-intellij-plugin and
    // https://plugins.gradle.org/plugin/org.jetbrains.intellij
    id 'org.jetbrains.intellij' version '1.6.0'

    // https://github.com/JetBrains/gradle-changelog-plugin#initializechangelog
    id("org.jetbrains.changelog") version "1.2.1"

    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

repositories {

    // intellij plugin adds www.jetbrains.com/intellij-repository/releases in a redirected way over
    // https://cache-redirector.jetbrains.com/www.jetbrains.com/intellij-repository/releases
    mavenCentral()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'lib')
    testCompile group: 'junit', name: 'junit', version: '4.13.2'
}

apply plugin: "org.jetbrains.intellij"
// apply plugin: 'org.jetbrains.changelog'

group 'com.daimler.sechub'
version '0.3.0'

sourceSets{
    main{
        java{
            srcDirs 'src/main/java', 'src/main/java-intellij'
        }
    }
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    // we chose 2020.3 - to have compatibility to Android Studio
    // https://developer.android.com/studio/releases/#arctic-fox
    version= '2020.3'
}

/*
 // changenotes plugin does currently not work well in combination
 // with intellij plugin 1.1.6 - so currently not used
tasks {
    patchPluginXml {
        changeNotes.set({ changelog.getLatest().toHTML() })
    }
}
*/

patchPluginXml {
    sinceBuild = '201'
    untilBuild =''
}

signPlugin {
    certificateChain = System.getenv("SECHUB_CERTIFICATE_CHAIN")
    privateKey = System.getenv("SECHUB_PRIVATE_KEY")
    password = System.getenv("SECHUB_PRIVATE_KEY_PASSWORD")
}

publishPlugin {
    token = System.getenv("SECHUB_INTELLIJ_PUBLISH_TOKEN")
    channels = ['alpha']
}

asciidoctor {
    baseDirFollowsSourceDir()
    sources {
        include 'user-guide.adoc'
    }
    outputDir  file('build/docs/asciidoc')
}

/*
changelog {
    version = "0.3.0"
    path = "${project.projectDir}/CHANGELOG.md"
    header = "[${-> version.get()}] - ${new SimpleDateFormat("yyyy-MM-dd").format(new Date())}"
    headerParserRegex = ~/\d+\.\d+/
    itemPrefix = "-"
    keepUnreleasedSection = true
    unreleasedTerm = "[Unreleased]"
    groups = ["Added", "Changed", "Deprecated", "Removed", "Fixed", "Security"]
}
 */